---
# Based on: https://jitsi.org/downloads/ubuntu-debian-installations-instructions

- name: Install Jitsi Meet
  hosts: jitsi
  vars:
    generate_certs: true

  pre_tasks:
    - name: Assert variables
      assert:
        that:
          - jitsi_hostname is defined
          - email_address is defined

  tasks:
    - name: Set hostname
      hostname:
        name: jitsi

    - name: Set hostname in /etc/hosts
      lineinfile:
        path: /etc/hosts
        regexp: ^127.0.1.1
        line: 127.0.1.1 {{ jitsi_hostname }} jitsi

    - name: Update apt cache
      apt:
        update_cache: true

    - name: Install upgrades
      apt:
        name: '*'
        state: latest

    - name: Install key
      apt_key:
        url: https://download.jitsi.org/jitsi-key.gpg.key
        state: present

    - name: Add jitsi repo
      copy:
        dest: /etc/apt/sources.list.d/jitsi-stable.list
        content: deb https://download.jitsi.org stable/

    - name: Preset values for install
      shell: echo "{{ item }}" | debconf-set-selections
      loop:
        - jicofo  jitsi-videobridge/jvb-hostname string {{ jitsi_hostname }}
        - jitsi-meet-turnserver jitsi-videobridge/jvb-hostname string {{ jitsi_hostname }}
        - jitsi-meet-web-config jitsi-meet/cert-choice select Generate a new self-signed certificate (You will later get a chance to obtain a Let's encrypt certificate)

    - name: Install jitsi-meet
      apt:
        name: jitsi-meet
        install_recommends: false
        update_cache: true

    - name: Check presence certificates
      stat:
        path: "{{ playbook_dir }}/files/{{ item }}"
      delegate_to: localhost
      register: certs
      loop:
        - fullchain.pem
        - privkey.pem

    - name: Set certificates variable
      set_fact:
        generate_certs: false
      when:
        - certs['results'][0]['stat']['exists']
        - certs['results'][1]['stat']['exists']

    - name: Create certificate folder
      file:
        path: /etc/letsencrypt/live/{{ jitsi_hostname }}
        state: directory

    - name: Copy certificates
      copy:
        src: "{{ jitsi_hostname }}/{{ item }}"
        dest: "/etc/letsencrypt/live/{{ jitsi_hostname }}/"
        mode: '0600'
      loop:
        - fullchain.pem
        - privkey.pem
      when: not generate_certs

    - name: Run letsencrypt script
      when: generate_certs
      block:
        - name: Preset email value for letsencrypt script
          lineinfile:
            path: /usr/share/jitsi-meet/scripts/install-letsencrypt-cert.sh
            regexp: 'read EMAIL$'
            line: "EMAIL={{ email_address }}  # read EMAIL"

        - name: Check if letencrypt already ran
          stat:
            path: /etc/letsencrypt/live/{{ jitsi_hostname }}
          register: certificate_folder

        - name: Configure Letsencrypt
          command: /usr/share/jitsi-meet/scripts/install-letsencrypt-cert.sh
          when: not certificate_folder.stat.exists

        - name: Retrieve certificates
          fetch:
            src: "/etc/letsencrypt/live/{{ jitsi_hostname }}/{{ item }}"
            dest: "{{ playbook_dir }}/files/{{ item }}"
          when: not certificate_folder.stat.exists
          loop:
            - fullchain.pem
            - privkey.pem
          
    - name: Set certificates in nginx config
      lineinfile:
        path: /etc/nginx/sites-enabled/{{ jitsi_hostname }}.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - regexp: "^    ssl_certificate\\s"
          line: "    ssl_certificate /etc/letsencrypt/live/{{ jitsi_hostname }}/fullchain.pem;"
        - regexp: "^    ssl_certificate_key\\s"
          line: "    ssl_certificate_key /etc/letsencrypt/live/{{ jitsi_hostname }}/privkey.pem;"
    
    - name: Restart nginx
      service:
        name: nginx
        state: restarted